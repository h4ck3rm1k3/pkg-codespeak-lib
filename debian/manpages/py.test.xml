<?xml version='1.0' encoding='ISO-8859-1'?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd" [

<!--

Process this file with an XSLT processor: `xsltproc \
-''-nonet /usr/share/sgml/docbook/stylesheet/xsl/nwalsh/\
manpages/docbook.xsl manpage.dbk'.  A manual page
<package>.<section> will be generated.  You may view the
manual page with: nroff -man <package>.<section> | less'.  A
typical entry in a Makefile or Makefile.am is:

DB2MAN=/usr/share/sgml/docbook/stylesheet/xsl/nwalsh/\
manpages/docbook.xsl
XP=xsltproc -''-nonet

manpage.1: manpage.dbk
        $(XP) $(DB2MAN) $<
    
The xsltproc binary is found in the xsltproc package.  The
XSL files are in docbook-xsl.  Please remember that if you
create the nroff version in one of the debian/rules file
targets (such as build), you will need to include xsltproc
and docbook-xsl in your Build-Depends control field.

-->

  <!-- Fill in your name for FIRSTNAME and SURNAME. -->
  <!ENTITY dhfirstname "<firstname>Alexandre</firstname>">
  <!ENTITY dhsurname   "<surname>Fayolle</surname>">
  <!-- Please adjust the date whenever revising the manpage. -->
  <!ENTITY dhdate      "<date>feb. 25, 2010</date>">
  <!-- SECTION should be 1-8, maybe w/ subsection other parameters are
       allowed: see man(7), man(1). -->
  <!ENTITY dhsection   "<manvolnum>1</manvolnum>">
  <!ENTITY dhemail     "<email>afayolle@debian.org</email>">
  <!ENTITY dhusername  "Alexandre Fayolle">
  <!ENTITY dhucpackage "<refentrytitle>python-py</refentrytitle>">
  <!ENTITY dhpackage   "py.test">

  <!ENTITY debian      "<productname>Debian</productname>">
  <!ENTITY gnu         "<acronym>GNU</acronym>">
  <!ENTITY gpl         "&gnu; <acronym>GPL</acronym>">
]>

<refentry>
  <refentryinfo>
    <authorgroup>
    <author>
      &dhfirstname;
      &dhsurname;
      <address>
        &dhemail;
      </address>
    </author>
    <editor>
      <firstname>Adam</firstname>
      <surname>Schmalhofer</surname>
      <address><email>Adam.Schmalhofer@gmx.de</email></address>
      <authorblurb>Updated manpage based on output of py.test --help
      </authorblurb>
    </editor>
    </authorgroup>
    <copyright>
      <year>2007</year>
      <holder>&dhusername;</holder>
      <year>2010</year>
      <holder>Adam Schmalhofer</holder>
      <holder>Holger Krekel</holder>
    </copyright>
    &dhdate;
  </refentryinfo>
  <refmeta>
    &dhucpackage;

    &dhsection;
  </refmeta>
  <refnamediv>
    <refname>&dhpackage;</refname>

    <refpurpose>pylib test runner</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>&dhpackage;</command>

      <arg><option><replaceable>option</replaceable></option></arg>

      <arg><option><replaceable>query</replaceable></option></arg>
      <arg><option><replaceable>filenames of tests...</replaceable></option></arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>DESCRIPTION</title>

    <para>This manual page documents briefly the
      <command>&dhpackage;</command> command.</para>

    <para>This manual page was written for the &debian; distribution
    because the original program does not have a manual page.
    Instead, it has documentation in html available in
    /usr/share/doc/python-codespeak-lib/py/doc/test.html.</para>

    <para><command>&dhpackage;</command> is a program that runs tests
    in a module or directory specified on the command line. It looks
    for functions and methods with names starting with 'test_' and run
    those methods. Assertions about test outcomes are done via the
    standard 'assert' statement.</para>

  </refsect1>
  <refsect1>
    <title>OPTIONS</title>

    <para>These programs follow the usual &gnu; command line syntax,
      with long options starting with two dashes (`-').  A summary of
      options is included below. This list may however be incomplete as test
      suits and aditional plugins can add more options.
    </para>

        <varlistentry>
          <term>
           <option>-h</option>
           <option>--help</option>
          </term>
          <listitem>
            <para>Displays a help message including all the available options.
            </para>
          </listitem>
        </varlistentry>
       
        <varlistentry>
          <term>
            <option>-x</option>
            <option>--exitfirst</option>
          </term>
          <listitem>
            <para>exit instantly on first error or failed test.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
            <option>-k KEYWORD</option>
          </term>
          <listitem>
            <para>only run test items matching the given space separated
            keywords.  precede a keyword with '-' to negate. Terminate
            the expression with ':' to treat a match as a signal to run
            all subsequent tests.</para>
          </listitem>
        </varlistentry>
       
        <varlistentry>
          <term>
           <option>--capture=method</option>
          </term>
          <listitem>
            <para>set capturing method during tests: fd (default)|sys|no.</para>
          </listitem>
        </varlistentry>
       
        <varlistentry>
          <term>
           <option>-s</option>
          </term>
          <listitem>
            <para>shortcut for --capture=no.</para>
          </listitem>
        </varlistentry>
       
        <varlistentry>
          <term>
           <option>--pdb</option>
          </term>
          <listitem>
            <para>start pdb (the Python debugger) on errors.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
            <option>-v</option>
            <option>--verbose</option>
          </term>
          <listitem>
            <para>increase verbosity.</para>
          </listitem>
        </varlistentry>

    <variablelist>
        <varlistentry>
          <term>
           <option>-l</option>
           <option>--showlocals</option>
          </term>
          <listitem>
            <para>show locals in tracebacks (disabled by default).</para>
          </listitem>
        </varlistentry>
       
        <varlistentry>
          <term>
            <option>--report=opts</option>
          </term>
          <listitem>
            <para>show more info, valid: skipped,xfailed</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
           <option>--tb=style</option>
          </term>
          <listitem>
            <para>traceback verboseness (long/short/no).</para>
          </listitem>
        </varlistentry>
       
        <varlistentry>
          <term>
           <option>--fulltrace</option>
          </term>
          <listitem>
            <para>don't cut any tracebacks (default is to cut).</para>
          </listitem>
        </varlistentry>
       
        <varlistentry>
          <term>
            <option>--funcargs</option>
          </term>
          <listitem>
            <para>show available function arguments, sorted by plugin</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
           <option>--pastebin=mode</option>
          </term>
          <listitem>
            <para>send failed|all info to Pocoo pastebin service.</para>
          </listitem>
        </varlistentry>
       
        <varlistentry>
          <term>
            <option>--junitxml=path</option>
          </term>
          <listitem>
            <para>create junit-xml style report file at given path.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
           <option>--collectonly</option>
          </term>
          <listitem>
            <para>only collect tests, don't execute them.</para>
          </listitem>
        </varlistentry>
       
        <varlistentry>
          <term>
            <option>--ignore=path</option>
          </term>
          <listitem>
            <para>ignore path during collection (multi-allowed).</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
            <option>--confcutdir=dir</option>
          </term>
          <listitem>
            <para>only load conftest.py's relative to specified dir.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
            <option>--doctest-modules</option>
          </term>
          <listitem>
            <para>run doctests in all .py modules</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
            <option>--doctest-glob=pat</option>
          </term>
          <listitem>
            <para>doctests file matching pattern, default: test*.txt</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
           <option>--basetemp=dir</option>
          </term>
          <listitem>
            <para>base temporary directory for this test run.</para>
          </listitem>
        </varlistentry>
       
        <varlistentry>
          <term>
           <option>--version</option>
          </term>
          <listitem>
            <para>display py lib version and import information.</para>
          </listitem>
        </varlistentry>
       
        <varlistentry>
          <term>
           <option>-p PLUGINS</option>
          </term>
          <listitem>
            <para>load the specified plugin after command line parsing.</para>
          </listitem>
        </varlistentry>
       
        <varlistentry>
          <term>
           <option>--traceconfig</option>
          </term>
          <listitem>
            <para>trace considerations of conftest.py files.</para>
          </listitem>
        </varlistentry>
       
        <varlistentry>
          <term>
           <option>--nomagic</option>
          </term>
          <listitem>
            <para>don't reinterpret asserts, no traceback cutting.</para>
          </listitem>
        </varlistentry>
       
        <varlistentry>
          <term>
           <option>--debug</option>
          </term>
          <listitem>
            <para>generate and show debugging information.</para>
          </listitem>
        </varlistentry>
       
        <varlistentry>
          <term>
           <option>--help-config</option>
          </term>
          <listitem>
            <para>show available conftest.py and ENV-variable names.</para>
          </listitem>
        </varlistentry>
       
        <varlistentry>
          <term>
            <option>--no-assert</option>
          </term>
          <listitem>
            <para>disable python assert expression reinterpretation.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
            <option>--genscript=path</option>
          </term>
          <listitem>
            <para>create standalone py.test script at given target path.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
           <option>-f</option>
           <option>--looponfail</option>
          </term>
          <listitem>
            <para>(requires xdist plugin) run tests, re-run failing test set
              until all pass.
            </para>
          </listitem>
        </varlistentry>
       
        <varlistentry>
          <term>
           <option>-n numprocesses</option>
          </term>
          <listitem>
            <para>(requires xdist plugin) shortcut for '--dist=load
              --tx=NUM*popen'
            </para>
          </listitem>
        </varlistentry>
       
        <varlistentry>
          <term>
           <option>--boxed</option>
          </term>
          <listitem>
            <para>(requires xdist plugin) box each test run in a separate
              process.
            </para>
          </listitem>
        </varlistentry>
       
        <varlistentry>
          <term>
           <option>--dist=distmode</option>
          </term>
          <listitem>
            <para>(requires xdist plugin) set mode for distributing tests to
              exec environments. each: send each test to each available
              environment. load: send each test to available environment.
              (default) no: run tests inprocess, don't distribute.
            </para>
         </listitem>
        </varlistentry>
       
        <varlistentry>
          <term>
           <option>--tx=xspec</option>
          </term>
          <listitem>
            <para>(requires xdist plugin) add a test execution environment.
              some examples: --tx popen//python=python2.5 --tx
              socket=192.168.1.102:8888 --tx
              ssh=user@codespeak.net//chdir=testcache
            </para>
          </listitem>
        </varlistentry>
       
        <varlistentry>
          <term>
           <option>-d</option>
          </term>
          <listitem>
            <para>(requires xdist plugin) load-balance tests.  shortcut for
              '--dist=load'
            </para>
          </listitem>
        </varlistentry>
       
        <varlistentry>
          <term>
           <option>--rsyncdir=dir1</option>
          </term>
          <listitem>
            <para>(requires xdist plugin) add directory for rsyncing to remote
              tx nodes.
            </para>
          </listitem>
        </varlistentry>

   </variablelist>
  </refsect1>
  <refsect1>
    <title>AUTHOR</title>

    <para>This manual page was written by &dhusername; &dhemail; for
      the &debian; system (but may be used by others).  Permission is
      granted to copy, distribute and/or modify this document under
      the terms of the &gnu; General Public License, Version 2 any 
	  later version published by the Free Software Foundation.
    </para>
	<para>
	  On Debian systems, the complete text of the GNU General Public
	  License can be found in /usr/share/common-licenses/GPL.
	</para>

  </refsect1>
</refentry>

